import telebot
import configure
from telebot import types
from database import sql, db

client = telebot.TeleBot(configure.config['token'])


@client.message_handler(commands=['start'])
def start(message):
    try:
        getname = message.from_user.first_name
        cid = message.chat.id
        uid = message.from_user.id

        sql.execute(f"SELECT id FROM users WHERE id = {uid}")
        if sql.fetchone() is None:
            sql.execute(f"INSERT INTO users VALUES ({uid}, '{getname}', 0, 0, 0)")
            client.send_message(cid, f"üõí | –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {getname}!")
            db.commit()
        else:
            client.send_message(cid, f"‚õîÔ∏è | –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –ü—Ä–æ–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.")
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.message_handler(commands=['myprofile'])
def myprofile(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        sql.execute(f"SELECT * FROM users WHERE id = {uid}")
        getaccess = sql.fetchone()[3]
        if getaccess == 0:
            accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
            client.send_message(cid,
                                f"*üìá | –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:*\n\n*üë§ | –í–∞—à ID:* {info[0]}\n*üí∏ | –ë–∞–ª–∞–Ω—Å:* {info[2]} ‚ÇΩ\n*üëë | –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {accessname}\n*üõí | –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:* {info[4]}\n\n*üóÇ –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ /mybuy*",
                                parse_mode='Markdown')
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['mybuy'])
def mybuy(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        text = '*üóÇ | –°–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:*\n\n'
        for info in sql.execute(f"SELECT * FROM users WHERE id = {uid}"):
            for infoshop in sql.execute(f"SELECT * FROM shop"):
                if str(info[0]) in infoshop[4]:
                    text += f"*{infoshop[0]}. {infoshop[1]}*\n–¢–æ–≤–∞—Ä: {infoshop[3]}\n\n"
        client.send_message(cid, f"{text}", parse_mode='Markdown', disable_web_page_preview=True)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['buy'])
def buy(message):
    cid = message.chat.id
    try:
        client.send_message(cid, f'–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ')
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['donate'])
def donate(message):
    try:
        cid = message.chat.id
        global uid
        uid = message.from_user.id
        msg = client.send_message(cid, f"*üí∞ | –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:*", parse_mode='Markdown')
        client.register_next_step_handler(msg, donate_value)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


def donate_value(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        if message.text == message.text:
            global donatevalue
            global commentdonate
            global getusername
            global getuserdonateid
            getusername = message.from_user.first_name
            getuserdonateid = message.from_user.id
            sql.execute(f"SELECT * FROM users WHERE id = {uid}")
            commentdonate = sql.fetchone()[0]
            donatevalue = int(message.text)
            rmk = types.InlineKeyboardMarkup()
            item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='donateyes')
            item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='donateno')
            rmk.add(item_yes, item_no)
            client.send_message(cid,
                                f"üî∞ | –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞?",
                                parse_mode='Markdown', reply_markup=rmk)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


def donateyesoplacheno(message):
    try:
        cid = message.chat.id
        uid = message.from_user.id
        removekeyboard = types.ReplyKeyboardRemove()
        if message.text == '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ':
            client.send_message(cid, f"‚úâÔ∏è | –í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º, –æ–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏ –≤—ã–¥–∞—á–∏ —Å—Ä–µ–¥—Å—Ç–≤.",
                                reply_markup=removekeyboard)
            client.send_message(596060542,
                                f"‚úâÔ∏è | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {getusername} –æ–ø–ª–∞—Ç–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {getuserdonateid}\n–°—É–º–º–∞: {donatevalue}‚ÇΩ\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {commentdonate}\n\n–ë–∞–ª–∞–Ω—Å –≤–∞—à–µ–≥–æ QIWI —Ä–∞–Ω—å—à–µ: {0}\n–ë–∞–ª–∞–Ω—Å –≤–∞—à–µ–≥–æ QIWI —Å–µ–π—á–∞—Å: {0}\n\n–ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä–Ω–æ—Å—Ç—å –æ–ø–ª–∞—Ç—ã –∑–∞—Ç–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–¥–∞—á—É —Å—Ä–µ–¥—Å—Ç–≤.\n–î–ª—è –≤—ã–¥–∞—á–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞–ø–∏—à–∏—Ç–µ: /giverub")
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.callback_query_handler(lambda call: call.data == 'donateyes' or call.data == 'donateno')
def donate_result(call):
    try:
        removekeyboard = types.ReplyKeyboardRemove()
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rmk.add(types.KeyboardButton('‚úÖ –û–ø–ª–∞—á–µ–Ω–æ'))
        if call.data == 'donateyes':
            client.delete_message(call.message.chat.id, call.message.message_id - 0)
            msg = client.send_message(call.message.chat.id,
                                      f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n‚òéÔ∏è –ö–æ—à–µ–ª–µ–∫ –¥–ª—è –æ–ø–ª–∞—Ç—ã: +711111111111\nüí∞ –°—É–º–º–∞: {donatevalue}‚ÇΩ\nüí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {commentdonate}\n*‚ö†Ô∏è–í–ê–ñ–ù–û‚ö†Ô∏è* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ —Å—É–º–º–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å *1–≤1*\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
                                      parse_mode='Markdown', reply_markup=rmk)
            client.register_next_step_handler(msg, donateyesoplacheno)
        elif call.data == 'donateno':
            client.send_message(call.message.chat.id, f"‚ùå | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤",
                                reply_markup=removekeyboard)
        client.answer_callback_query(callback_query_id=call.id)
    except:
        client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler(commands=['help'])
def helpcmd(message):
    cid = message.chat.id
    client.send_message(cid,
                        '*–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*\n\n/myprofile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/help - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/buy - –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä\n/donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç\n/mybuy - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤\n/teh - –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π',
                        parse_mode='Markdown')

@client.message_handler(commands=['teh'])
def teh(message):
    try:
        cid = message.chat.id
        msg = client.send_message(cid, f"*üì® | –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ*",
                                  parse_mode='Markdown')
        client.register_next_step_handler(msg, teh_next)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


def teh_next(message):
    try:
        cid = message.chat.id
        if message.text == message.text:
            global tehtextbyuser
            global tehnamebyuser
            global tehidbyuser
            tehidbyuser = int(message.from_user.id)
            tehnamebyuser = str(message.from_user.first_name)
            tehtextbyuser = str(message.text)
            rmk = types.InlineKeyboardMarkup()
            item_yes = types.InlineKeyboardButton(text='‚úâÔ∏è', callback_data='tehsend')
            item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='tehno')
            rmk.add(item_yes, item_no)
            client.send_message(cid,
                                f"‚úâÔ∏è | –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ:\n\n–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {tehtextbyuser}\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ?",
                                parse_mode='Markdown', reply_markup=rmk)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.callback_query_handler(func=lambda call: call.data == 'tehsend' or call.data == 'tehno')
def teh_callback(call):
    try:
        if call.data == 'tehsend':
            for info in sql.execute(f"SELECT * FROM users WHERE id = {call.from_user.id}"):
                client.delete_message(call.message.chat.id, call.message.message_id - 0)
                client.send_message(call.message.chat.id,
                                    f"‚úâÔ∏è | –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
                client.send_message(769368378,
                                    f"‚úâÔ∏è | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {tehnamebyuser} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {tehidbyuser}\n–¢–µ–∫—Å—Ç: {tehtextbyuser}\n\n–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–ø–∏—à–∏—Ç–µ /ans")
        elif call.data == 'tehno':
            client.delete_message(call.message.chat.id, call.message.message_id - 0)
            client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–µ")
        client.answer_callback_query(callback_query_id=call.id)
    except:
        client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.message_handler(commands=['ans'])
def sendmsgtouser(message):
    try:
        cid = message.chat.id

        msg = client.send_message(cid, f"üë§ | –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:")
        client.register_next_step_handler(msg, sendmsgtouser_next)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


def sendmsgtouser_next(message):
    try:
        cid = message.chat.id

        if message.text == message.text:
            global getsendmsgtouserid
            getsendmsgtouserid = int(message.text)
            msg = client.send_message(cid, f"üì® | –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:")
            client.register_next_step_handler(msg, sendmsgtouser_next_text)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


def sendmsgtouser_next_text(message):
    try:
        cid = message.chat.id

        if message.text == message.text:
            global getsendmsgtousertext
            getsendmsgtousertext = str(message.text)
            rmk = types.InlineKeyboardMarkup()
            item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='sendmsgtouseryes')
            item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='sendmsgtouserno')
            rmk.add(item_yes, item_no)
            msg = client.send_message(cid,
                                      f"üî∞ | –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {getsendmsgtouserid}\n–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {getsendmsgtousertext}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ?",
                                      reply_markup=rmk)
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')


@client.callback_query_handler(func=lambda call: call.data == 'sendmsgtouseryes' or call.data == 'sendmsgtouserno')
def sendmsgtouser_callback(call):
    try:
        if call.data == 'sendmsgtouseryes':
            client.delete_message(call.message.chat.id, call.message.message_id - 0)
            client.send_message(call.message.chat.id, f"‚úâÔ∏è | –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            client.send_message(getsendmsgtouserid,
                                f"‚úâÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{getsendmsgtousertext}")
        elif call.data == 'sendmsgtouserno':
            client.delete_message(call.message.chat.id, call.message.message_id - 0)
            client.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        client.answer_callback_query(callback_query_id=call.id)
    except:
        client.send_message(call.message.chat.id, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')

@client.message_handler()
def mistake(message):
    try:
        getname = message.from_user.first_name
        cid = message.chat.id
        client.send_message(cid, f"‚õîÔ∏è | –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! –ü—Ä–æ–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.")
    except:
        client.send_message(cid, f'üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã')
